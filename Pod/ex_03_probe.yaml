apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-demo
data:
  tcp_server.py: |
    #!/usr/bin/env python

    import socket
    import time

    TCP_IP = '0.0.0.0'
    TCP_PORT = 5005
    BUFFER_SIZE = 20  # Normally 1024, but we want fast response

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((TCP_IP, TCP_PORT))
    s.listen(1)

    while 1:
      conn, addr = s.accept()
      print(time.time(), 'Connection address:', addr)
      while 1:
        data = conn.recv(BUFFER_SIZE)
        if not data: break
        print(time.time(), "received data:", data)
        conn.send(data)  # echo
      conn.close()
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-demo
  labels:
    app: demo
spec:
  containers:
  - name: container-01
    image: python:alpine3.8
    ports:
    - containerPort: 3000
    command: ["sh", "-c", "--" ]
    args: [ "while true; do sleep 30; done;" ]
    livenessProbe:
      tcpSocket:
        port: 5005
      initialDelaySeconds: 30
      timeoutSeconds: 10
    volumeMounts:
    - name: test-volume
      mountPath: /tmp
  volumes:
  - name: test-volume
    configMap:
      name: cm-demo
